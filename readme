Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?
Josh Schoenberg


------------------------------------------------------------------------
Student 2: What is your name?
Jack Toubes


------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.
The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. Such documents include the course's lecture slides and precept handouts.

The man pages on the armlab cluster.

The course's current staff members outside of class time through office hours.

The course's current staff members outside of class time through Ed.

------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.
The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. Such documents include the course's lecture slides and precept handouts.

The man pages on the armlab cluster.

The course's current staff members outside of class time through Ed.


------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.
None.


------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.
None.

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?
I found it very helpful for understaning how to read large portions of 
code. 


------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?

I found part 2 of this assignment to be vague and ambiguous in
terms of it's exectations. I found part 1 to be a good excersize in 
debugging, and part 3 a good simulation of a real SE task (ie receiving
a codebase and adding features).

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

In our implementation, we store the directory and file children in 
lexicographic order. In our FT_toString() function, we then have the 
function print out the children the way that it should, with files being
printed before directories. 

------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

None (on files we created)

------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None (other than the ones we could ignore)

------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

It generates errors for 5 functions in nodeFT.c/h which it says aren't
used outside of nodeFT.c; it is wrong about this, they are used in ft.c

------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

Aside from the errors we were told we could ignore, there are none.

------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1        BDT_insert()
---------------------------------------------------------------
         ./bdtBad2        BDT_freeSubtree() (within BDT_rm())
---------------------------------------------------------------
         ./bdtBad3        BDT_addChild (which is called by BDT_newNode()
                          in BDT_insert())
---------------------------------------------------------------
         ./bdtBad4        BDT_strlenAccumulate() 
                          (called by BDT_toString()) 
---------------------------------------------------------------
         ./bdtBad5        BDT_findNode() (called by BDT_contains())
===============================================================

------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?
1. In nodeDTGood.c, in the Node_getPath() function, the function returns 
      a pointer to the actual path object, oPPath. This means that it is 
      possible to free that object, thus ruining the Node unbeknownst to
      to the tree/node.
2. DT_toString() in dtGood.c calls DynArray_new(), but it does not deal 
      with a situation where DynArray_new() returns NULL because it 
      cannot allocate the memory.
3. Node_hasChild() is a very confusing function. We reccomend
      considering splitting it up into a function Node_contains() and a
      function Node_getChildIndex() in order to improve the clarity of
      the module for others reading it.
4. In DT_preorderTraversal(), the parameters should follow naming conventions: 
      oNRoot, oDynArray, and ulIndex. In addition, size_t c should be 
      renamed to follow conventions (e.g. ulIterator).
 
------------------------------------------------------------------------